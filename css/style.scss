//@import "susy";
@import "normalize";
@import "skeleton";

@import "variables"; // import variables first. it is being used by 'base'.

@import "base";

body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

.pop:hover {
  background: pink;
}

a {
  text-decoration-color: pink;
}

.wrapper {
  //@include container();
  margin-left: auto;
  margin-right: auto;
  //width: 100%;

  max-width: 990px;
  padding: 0 20px; // padding on the right and left, so that the content does not stick to the margins on screens width<950px
  //@include cf;
}

.section {
  margin-bottom: $section-margin-bottom;

  //&.projects {
  //  margin-bottom: 0;
  //
  //  .projects-wrapper {
  //    padding-bottom: $section-margin-bottom;
  //  }
  //}
}

header {
  //border-bottom: 1px solid #f1f1f1;
  padding: $vertical-margin-small 0 0 0;
  z-index: 100000; // should be more than slick arrow's z-index (library we are using)
}

.home .hero {
  margin: $vertical-margin-small * 2 0 $vertical-margin-small * 2 0;
}

span.highlight {
  background: #222222;
  color: #f8f8f8;
  padding: 0 4px;
}

/* Using combination of flexbox and susy for layout, especially helpful in creating columns of equal height (and the
length of the content is fluid)
Followed as described here: https://codepen.io/michellebarker/post/flexbox-layouts-with-susy */
.flex-container {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

header {
  background: pink; //because the header is fixed
  .wrapper {
    //background: $text-color-black;
    //border-bottom: 3px solid lighten($heading-grey, 15%);
  }
}

.about-me {
  margin-top: $vertical-margin-small * 2;
  &.section {
    padding: $vertical-margin-small 0;
  }

  .photo {
    width: 45%;
    background: url("../images/profile.jpg");
    background-position: center 15%;
    background-size: cover;
    background-repeat: no-repeat;
    filter: brightness(95%);
    border-radius: 50%;
    max-width: 380px;
    height: 380px;

    &:hover {
      filter: brightness(100%);
    }
  }

  .text {
    width: 55%;
  }

  .companies {
    margin-bottom: 0;

    img {
      height: 30px;
      padding-right: 15px;
      vertical-align: text-top;
      opacity: 0.8;
      filter: grayscale(100%);

      &:hover {
        //filter: grayscale(100%);
        opacity: 1;
      }
    }
  }
}

footer {
  //background: $color-pink-highlighted;
  margin-top: auto;
  background: pink;
  padding: $vertical-margin-small 0;

  &.section {
    margin-bottom: 0;
  }

  h2,
  p,
  span,
  .icon,
  a {
    // color: #e1e1e1;
  }

  a:hover {
    // color: white;
  }

  .flex-container {
    align-items: flex-end;
  }

  .icon {
    vertical-align: middle;
    font-size: 2.5rem;
    padding-right: $horizontal-padding/2;

    &:hover {
      color: white;
    }
  }

  .email .icon {
    padding-right: 0;
  }

  .section-column {
    width: 48%;
  }

  .email {
    p {
      font-size: 1.3rem;
      margin-bottom: 0;
    }
  }

  //.social-media {
  //  text-align: center;
  //}

  .copyright {
    text-align: right;
  }
}

/* Styles for Mobile and Tablet */

@media (max-width: 750px) {
  html {
    //font-size: 54%; // as compared to 62.5% for the desktop. All dimensions based on rems will be calculated accordingly.
    // we have set most heights, margin, font-size in rems.
  }

  .flex-container {
    flex-direction: column;
  }

  header {
    .flex-container {
      flex-direction: row;
    }
  }

  .section {
    margin-bottom: 2rem;
  }

  .section .flex-container .section-column {
    width: 100%;
    margin-bottom: $vertical-margin-small;
  }

  .about-me {
    margin-top: 0;

    .flex-container {
      flex-direction: column-reverse;

      .photo {
        width: 250px;
        height: 250px;
        margin-bottom: $vertical-margin-small;
      }
    }
  }

  footer#contact {
    .flex-container {
      flex-direction: row;
    }
  }
}

/* Styles for Tablet */

@media (min-width: 550px) and (max-width: 750px) {
  html {
    // font-size: 54%;
  }

  .wrapper {
    padding: 0 100px;
  }

  .about-me .flex-container .photo {
    width: 250px;
    height: 250px;
  }
}
